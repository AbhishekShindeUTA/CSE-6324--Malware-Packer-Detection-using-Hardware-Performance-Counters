#Importing Tkinter Standard GUI Package
import tkinter as tk
#Importing the Tkinter Fonts Module for allowing the use of Multiple Font Styles
import tkinter.font as tkFont
#Importing the FileDialog Module allowing for open and save operations of Files in Tkinter 
from tkinter import filedialog


#We create a new window instance of Tkinter using the statement below. It creates the main window (or box) of our GUI
window = tk.Tk()
#We create the title for our GUI Window using the .title() function
window.title("Team 5 Project - CSE 6334")

#Using the tkFont module that we imported on Line 6, we use the .Font() function 
# within tkFont module and define a font style = "Secular One" and the font size
fontStyle = tkFont.Font(family="Secular One", size=15)

#Using the .geometry() function, we can define the dimensions of our GUI Window.
window.geometry("500x350")
#Using the .configure() function, we can set different attribute values, 
# here we are setting the background color for the whole window to be "skyblue"
window.configure(bg="skyblue")

#Using the .Label() function, we are adding the title of our project as Text 
# and displaying it on the window , by setting different attributes along with it.
greeting = tk.Label(text="Packing Algorithm Classifier using Hardware Performance Counters", 
        background="skyblue",
        height=5,
        wraplength=500,
        width=70,
        font=fontStyle)

#Using the Label function lets us add instructions for our application after our Title as well. We can set the attributes for each Label.
howto = tk.Label(text="How to Use :",
                background="green",
                font=fontStyle,
                width=70,
                wraplength=300,
                 anchor="w",
                 pady="3",
                justify="left")

inst = tk.Label(text="1. Upload CSV File Containing HPC Values. \n 2. Click on 'Classify' Button Below.",
                background="green",
                font=fontStyle,
                width=70,
                wraplength="500",
                justify="left")

#Here we have defined a function which is called when the user clicks on the "Select CSV File" Button.
#We also check if the file selected by the user is a CSV file or not.
#If the file is not of CSV Format, the program will display a "File is not a CSV File" message on the UI. 
#filedialog.askopenfilename() allows us to interact with File Operations using the FileDialog Module making it easier and simpler to code with.     
def SelectCSV(event=None):
    selectfile = filedialog.askopenfilename()
    optext = ""
    if(selectfile.endswith('.csv')):
            optext="File is a CSV File"
    else:
            optext="File is not a CSV File"
        
    displayfile = tk.Label(window,text=optext,width=150,wraplength=1000,background="light blue")
    #The .pack() function is used to display the selected variable on the GUI Window
    displayfile.pack()

#This function is called when we click on the "Run Classifier" . This function will run the classifier model (currently not implemented) and 
#classify the program, after which it will display the result in text, similar to how the below statement is going to be displayed.
def buttonClick():
        btnclick = tk.Label(window, text = "Packing Algorithm Used is #######")
        btnclick.pack()

#We are packing and displaying the different Labels which define the Title and the Instructions for the Application
greeting.pack()
howto.pack()
inst.pack()

#We are creating a button after the instruction Label using the .Button() function. 
#After defining the different attributes, we pack the button so that it is displayed on the screen.
#We do the same for both Buttons
selectbutton = tk.Button(window, text='Select CSV File',command=SelectCSV, padx="20",pady="5")
selectbutton.pack(side="left")

classifybutton = tk.Button(window,text='Run Classifier',command=buttonClick, padx="20",pady="5")
classifybutton.pack(side="right")

#The .mainloop() function is an infinite loop which is required to run the application such that it draws all the windows and all the elements 
# of the GUI and after drawing the components, wait for an event(or events) which in our program include the clicking of either of the 2 buttons. 
window.mainloop()