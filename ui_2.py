#Importing Tkinter Standard GUI Package
from tkinter import *
import tkinter as tk
#Importing the Tkinter Fonts Module for allowing the use of Multiple Font Styles
import tkinter.font as tkFont
#Importing the FileDialog Module allowing for open and save operations of Files in Tkinter 
from tkinter import filedialog
import joblib
import pandas


#We create a new window instance of Tkinter using the statement below. It creates the main window (or box) of our GUI
window = tk.Tk()
#We create the title for our GUI Window using the .title() function
window.title("Team 5 Project - CSE 6334")
#Using the .geometry() function, we can define the dimensions of our GUI Window.
window.geometry("700x400")
window.resizable(0,0)

global filepath
filepath = ""
global filetype
filetype = 0


lframe = Frame(window, bg="skyblue", width="450")
lframe.pack(anchor=W, fill=Y, expand=False, side="left")

rframe = Frame(window, bg="orange",width="250")
rframe.pack(anchor=N, fill=BOTH, expand=True, side="left")

#Here we have defined a function which is called when the user clicks on the "Select CSV File" Button.
#We also check if the file selected by the user is a CSV file or not.
#If the file is not of CSV Format, the program will display a "File is not a CSV File" message on the UI. 
#filedialog.askopenfilename() allows us to interact with File Operations using the FileDialog Module making it easier and simpler to code with.  


 
def SelectCSV(event=None):
    global filepath
    global filetype
    optext = ""
    selectfile = filedialog.askopenfilename()
    filepath = selectfile
    if(selectfile.endswith('.xlsx')):
            optext="Entered File is of the correct format."
            filetype = 1 #if 1 - file is a csv file
    else:
            optext="File format not supported. Please Enter a .xlsx file."
            filetype = 0 #if - file is not a csv file
    
    fileoutput = tk.Label(outframe,text=optext,
    background="powder blue",
    font=('comic sans',14,'bold'),
    wraplength=250,
    width=36)
    fileoutput.pack(fill=Y)
     

#NEW FUNCITON
def buttonClick():
        global filepath
        global filetype

        if ((filetype == 0) or (filepath=="")):
                classifierOP = tk.Label(outframe,text="Please Upload a  File",background="pink",font=('comic sans',12,'bold'),
                wraplength=500,width=36)
                classifierOP.pack(fill=Y)
        else :
                filename = 'final_deliverable_model.sav'
                loaded_model = joblib.load(filename)
                outputfile = pandas.read_excel(r'%s' %filepath,header=None,sheet_name="Sheet1")
                result = loaded_model.predict(outputfile)
                classifierOP = tk.Label(outframe,text="The identified packing algorithm is :"+result[0],background="pink",font=('comic sans',10,'bold'),
                wraplength=250,width=36)
                classifierOP.pack(fill=Y)
        

def ReadMe():
    from os import startfile
    startfile("ReadMe.txt")

def refresh():
        global filepath 
        filepath =""
        for widget in outframe.winfo_children():
                widget.destroy()

#Using the .Label() function, we are adding the title of our project as Text 
# and displaying it on the window , by setting different attributes along with it.
greeting = tk.Label(lframe,text="Packing Algorithm Classifier \n using \n Hardware Performance Counters", 
        background="skyblue",
        font=('comic sans',14,'bold'),
        height=5,
        wraplength=500,
        width=36)
greeting.pack()

team5 = tk.Label(lframe,text="-By Team 5",background="skyblue",
        font=('comic sans',14,'bold'),
        height=0,
        wraplength=500,
        width=36)
team5.pack()

members = tk.Label(lframe,text="Abhishek Shinde \n Erika Leal",background="skyblue",
        font=('comic sans',14,"bold"),
        height=3,
        wraplength=500,
        width=36)
members.pack()



selectbutton = tk.Button(lframe, text='Select Excel File',command=SelectCSV,padx="20",pady="5")
selectbutton.pack(padx=(10,0),side="left")

howto = tk.Button(lframe, text='Open ReadMe File', command=ReadMe,padx="20",pady="5")
howto.pack(padx=(10,0),side="left")

classifybutton = tk.Button(lframe,text='Run Classifier',command=buttonClick, padx="20",pady="5")
classifybutton.pack(padx=(10,0),side="left")

refresh = tk.Button(lframe,text='Refresh Outputs',command=refresh, padx="20",pady="5")
refresh.place(relx=0.5, rely=0.9, anchor=CENTER)



outwindow = tk.Label(rframe,text="Output:",
        background="green",
        font=('comic sans',14,'bold'),
        wraplength=500,
        width=36,
        height=3)
outwindow.pack()

outframe = Frame(rframe,bg="white",width="250")
outframe.pack(fill=BOTH , expand=True)



window.mainloop()